openapi: 3.0.3
info:
  title: Queue
  description: ''
  version: 1.0.0
tags:
  - name: task
paths:
  /tasks:
    post:
      summary: Add tasks to be run
      deprecated: false
      description: ''
      operationId: Add tasks to be run
      tags:
        - task
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tasks:
                  type: array
                  items: &ref_0
                    $ref: '#/components/schemas/Task'
                  description: tasks to be added
              required:
                - tasks
            example:
              tasks:
                - name: task001
                  priority: 0
                  block: true
                  finished: true
                  skips:
                    - task002
                  tags:
                    - om
                  flags:
                    retry: 3
                    log: true
                    executor:
                      name: executor205
                      ip: 178.10.0.205
                      status: idle
                      running: task001
                      config:
                        env: vnf178
                      tags:
                        - om
                    block-before: true
                    block-after: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
              examples:
                '1':
                  summary: Success
                  value: task is added successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
        '500':
          description: ServerInternalError
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  message:
                    type: string
                    description: error information
                  code:
                    type: integer
                    description: error code
                required:
                  - message
                  - code
      security: []
    get:
      summary: Query tasks status
      deprecated: false
      description: Query tasks status
      operationId: queryAllTasks
      tags:
        - task
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  waitting:
                    type: array
                    items: *ref_0
                    description: tasks waitting to be executed
                  running:
                    type: array
                    items: *ref_0
                    description: running tasks
                required:
                  - waitting
                  - running
              examples:
                '1':
                  summary: Success
                  value:
                    waitting:
                      - name: task003
                        priority: 6
                        block: false
                        finished: false
                        skips:
                          - ''
                        tags:
                          - explicabo
                        flags:
                          retry: 4
                          log: true
                          executor:
                            name: eum alias commodi
                            ip: 226.117.143.206
                            status: block
                            running: dolor ipsum velit qui tempor
                            config:
                              env: aliqua sit pariatur irure qui
                            tags:
                              - et
                          block-before: false
                          block-after: false
                    running:
                      - name: task004
                        priority: 1
                        block: true
                        finished: true
                        skips:
                          - ''
                        tags:
                          - delectus
                        flags:
                          retry: 2
                          log: true
                          executor:
                            name: fugiat esse atque
                            ip: 127.40.146.14
                            status: idle
                            running: ea
                            config:
                              env: aute qui fugiat ut
                            tags:
                              - aperiam
                          block-before: false
                          block-after: true
        '404':
          description: Record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
              examples:
                '1':
                  summary: Exception
                  value:
                    code: 404
                    message: no match record found
        '500':
          description: ServerInternalError
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  message:
                    type: string
                    description: error information
                  code:
                    type: integer
                    description: error code
                required:
                  - message
                  - code
      security: []
  /tasks/result/{caseid}:
    get:
      summary: Query specify task result
      deprecated: false
      description: query specify task result
      operationId: querySpecifyTaskResult
      tags:
        - task
      parameters:
        - name: caseid
          in: path
          description: ''
          required: true
          example: task001
          schema:
            type: string
        - name: log
          in: query
          description: ''
          required: false
          example: 'false'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: &ref_1
                $ref: '#/components/schemas/Result'
              examples:
                '1':
                  summary: Success
                  value:
                    name: task001
                    result: true
                    cost: 224
                    log: here is running log if query parameter log is set.
        '404':
          description: Record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
              examples:
                '1':
                  summary: Exception
                  value:
                    code: 404
                    message: no match record found
        '500':
          description: ServerInternalError
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  message:
                    type: string
                    description: error information
                  code:
                    type: integer
                    description: error code
                required:
                  - message
                  - code
      security: []
  /tasks/result:
    get:
      summary: Query all task result
      deprecated: false
      description: query all task result
      operationId: queryAllTaskResult
      tags:
        - task
      parameters:
        - name: log
          in: query
          description: ''
          required: false
          example: 'false'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items: *ref_1
                required:
                  - results
        '500':
          description: ServerInternalError
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  message:
                    type: string
                    description: error information
                  code:
                    type: integer
                    description: error code
                required:
                  - message
                  - code
      security: []
    post:
      summary: Push results
      deprecated: false
      description: push results
      operationId: pushResults
      tags:
        - task
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                results:
                  type: array
                  items: *ref_1
              required:
                - results
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: uint64
                  message:
                    type: string
                required:
                  - message
                  - code
              examples:
                '1':
                  summary: Success
                  value:
                    code: 201
                    message: push successfully.
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
        '500':
          description: ServerInternalError
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  message:
                    type: string
                    description: error information
                  code:
                    type: integer
                    description: error code
                required:
                  - message
                  - code
      security: []
components:
  schemas:
    Result:
      type: object
      properties:
        name:
          type: string
          description: task name
        result:
          type: boolean
          description: success or fail
        cost:
          type: integer
          description: cost time
          format: uint64
        log:
          type: string
          description: log
      required:
        - name
        - result
        - cost
    Config:
      type: object
      properties:
        env:
          type: string
          description: env name
      required:
        - env
    Executor:
      type: object
      properties:
        name:
          type: string
          description: name of this executor
        ip:
          type: string
          description: ip of this executor
        status:
          type: string
          description: executor's status
          enum:
            - busy
            - idle
            - block
        running:
          type: string
          description: task this executor is running
        config:
          description: config this executor is using
          $ref: '#/components/schemas/Config'
        tags:
          type: array
          items:
            type: string
          description: tags of task this executor can run
    Task:
      type: object
      properties:
        name:
          type: string
          description: 'task name, default value is used to configure the executor '
          default: global
        priority:
          type: integer
          description: priority of this task
          title: ''
          minimum: 0
          maximum: 10
        block:
          type: boolean
          description: block the executor, invalid if task name is not default value
        finished:
          type: boolean
          description: skip all tasks, invalid if task name is not default value
        skips:
          type: array
          items:
            type: string
            description: name of task to be skiped
          description: skip tasks, invalid if task name is not default value
        tags:
          type: array
          items:
            type: string
          uniqueItems: true
          description: key word of this task
        flags:
          type: object
          properties:
            retry:
              type: integer
              description: retry regardless of result
            log:
              type: boolean
              description: whether to print logs when the task succeeds
            executor:
              description: executor to run this task
              $ref: '#/components/schemas/Executor'
            block-before:
              type: boolean
              description: block executor before task execution
            block-after:
              type: boolean
              description: block executor after task execution
          description: flags for task execution
          required:
            - executor
      required:
        - name
        - priority
        - flags
  securitySchemes: {}
servers:
  - url: https://prod.your-api-server.com
    description: Prod Env
